---
- name: Check current prometheus version
  ansible.windows.win_command:
    argv:
    - "{{ prom_app_dir }}\\prometheus.exe"
    - --version
  ignore_errors: yes
  changed_when: False
  register: prom_installed_version

- name: Install prometheus
  when: prom_installed_version.failed or prom_installed_version.stdout is not search("^prometheus, version " ~ prom_server_version)
  block:
    - name: Download Prometheus locally
      delegate_to: localhost
      get_url: 
        url: "{{ prom_server_package }}"
        dest: "/tmp/prometheus.zip"
      when: localdownload == "true"
    - name: Download nssm locally
      delegate_to: localhost
      get_url: 
        url: "{{ prom_nssm_package }}"
        dest: "/tmp/nssm.zip"
      when: localdownload == "true"
    - name: Copy Prometheus
      win_copy: 
        src: "/tmp/prometheus.zip"
        dest: "{{ prom_temp_dir }}\\prometheus.zip"
      when: localdownload == "true"
    - name: Copy nssm
      win_copy: 
        src: "/tmp/prometheus.zip"
        dest: "{{ prom_temp_dir }}\\nssm.zip"
      when: localdownload == "true"
    - name: Download Prometheus
      win_get_url:
        url: "{{ prom_server_package }}"
        checksum: "{{ prom_server_package_checksum }}"
        checksum_algorithm: sha256
        dest: "{{ prom_temp_dir }}\\prometheus.zip"
      when: localdownload == "false"
    - name: Download nssm
      win_get_url:
        url: "{{ prom_nssm_package }}"
        checksum: "{{ prom_nssm_package_checksum }}"
        checksum_algorithm: sha256
        dest: "{{ prom_temp_dir }}\\nssm.zip"
      when: localdownload == "false"
    - name: Extract Prometheus
      win_unzip:
        src: "{{ prom_temp_dir }}\\prometheus.zip"
        dest: "{{ prom_temp_dir }}"
    - name: Extract nssm
      win_unzip:
        src: "{{ prom_temp_dir }}\\nssm.zip"
        dest: "{{ prom_temp_dir }}"
    - name: Copy prometheus dir
      ansible.windows.win_copy:
        src: "{{ prom_temp_dir }}\\prometheus-{{ prom_server_version }}.windows-{{ prom_server_arch }}\\"
        dest: "{{ prom_app_dir }}"
        remote_src: yes
    - name: Copy nssm binary
      ansible.windows.win_copy:
        src: "{{ prom_temp_dir }}\\nssm-{{ prom_nssm_version }}\\{{ prom_nssm_arch }}\\nssm.exe"
        dest: "{{ prom_app_dir }}"
        remote_src: yes

- name: Create Prometheus data directory
  ansible.windows.win_file:
    path: "{{ prom_data_dir }}"
    state: directory

- name: Get hostname
  win_shell: hostname
  register: machine_hostname

- name: Land Prometheus config
  win_template:
    src: prometheus.yml.j2
    dest: "{{ prom_config_file }}"

- name: Configure Prometheus agent to run as a service
  win_nssm:
    name: Prometheus
    state: restarted
    display_name: Prometheus Agent
    description: Prometheus server in agent mode writing to Sysdig Secure
    application: "{{ prom_app_dir }}\\prometheus.exe"
    executable: "{{ prom_app_dir }}\\nssm.exe"
    stderr_file: "{{ prom_data_dir }}\\err.log"
    stdout_file: "{{ prom_data_dir }}\\out.log"
    arguments:
      - --enable-feature=agent
      - --config.file={{ prom_config_file }}
      - --log.level={{ prom_server_log_level }}
