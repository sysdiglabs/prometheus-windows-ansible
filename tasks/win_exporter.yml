---
- name: Download Windows installer locally
  delegate_to: localhost
  get_url: 
    url: "{{ prom_windows_exporter_installer }}"
    dest: "{{ localdownload_dir }}/windows_exporter.msi"
  when: localdownload | bool

- name: Create windows_exporter data directory
  ansible.windows.win_file:
    path: "{{ prom_windows_exporter_data_dir }}"
    state: directory

- name: Copy Windows installer
  win_copy: 
    src: "{{ localdownload_dir }}/windows_exporter.msi"
    dest: "{{ prom_windows_exporter_msi_path }}"
  when: localdownload | bool

- name: Install the Windows exporter
  win_package:
    path: "{{ prom_windows_exporter_msi_path }}"
  when: localdownload | bool

- name: Install the Windows exporter
  win_package:
    path: "{{ prom_windows_exporter_installer }}"
    product_id: windows_exporter
  when: not localdownload  | bool

- name: Create textfile collector directory
  ansible.windows.win_file:
    path: "{{ prom_windows_exporter_textfile_dir }}"
    state: directory

- name: Create scripts directory
  ansible.windows.win_file:
    path: "{{ prom_windows_exporter_script_dir }}"
    state: directory

- name: Land custom scripts
  win_copy:
    src: "{{ prom_windows_exporter_script_dir_local }}/{{ item.file }}"
    dest: "{{ prom_windows_exporter_script_dir }}\\"
  loop: "{{ prom_windows_exporter_scripts }}"

- name: Create scheduled tasks
  win_scheduled_task:
    name: "Prometheus Custom Script - {{ item.file }}"
    logon_type: service_account
    user: LOCAL SERVICE
    actions:
      - path: powershell
        arguments: "-File \"{{ prom_windows_exporter_script_dir }}\\{{ item.file }}\""
        working_directory: "{{ prom_windows_exporter_textfile_dir }}"
    triggers:
      - type: registration
        repetition:
          interval: "PT{{ item.interval_minutes }}M"
  loop: "{{ prom_windows_exporter_scripts }}"

- name: Land windows_exporter config
  win_template:
    src: windows_exporter.yml.j2
    dest: "{{ prom_windows_exporter_config_file }}"
  notify: Restart windows_exporter
  tags:
    - configure

- name: Ensure service is started
  win_service:
    name: windows_exporter
    start_mode: auto
    state: started
    path: '"C:\Program Files\windows_exporter\windows_exporter.exe" --config.file "{{ prom_windows_exporter_config_file }}"'